{"version":3,"file":"static/js/690.10278d1e.chunk.js","mappings":"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","sources":["component/AdSense.js","views/pages/dashboard/Complete.js","../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst AdSense = (props) => {\n    const { className, width, height } = props;\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.async = true;\n        script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n        script.setAttribute('data-ad-client', 'ca-pub-8429136628825533');\n        script.crossOrigin = 'anonymous';\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    useEffect(() => {\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }, []);\n\n    // Conditionally set styles based on props\n    const adStyle = {\n        display: 'block',\n        width: width || 'auto',  // default to 'auto' if no width is provided\n        height: height || 'auto', // default to 'auto' if no height is provided\n    };\n\n    // Conditionally set styles based on props\n    const adContentStyle = {\n        display: 'relative',\n        width: width || 'auto',  // default to 'auto' if no width is provided\n        height: height || 'auto', // default to 'auto' if no height is provided\n    };\n\n    return (\n        <div className={`${className}`} style={(width && height) && adContentStyle}>\n            <ins className=\"adsbygoogle\"\n                style={adStyle}\n                data-ad-client=\"ca-pub-8429136628825533\"\n                data-ad-slot=\"6987607102\"\n                data-ad-format=\"auto\"\n                data-full-width-responsive=\"true\"></ins>\n        </div>\n    );\n};\n\nexport default AdSense;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    styled,\n    Typography,\n    useMediaQuery,\n} from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"@emotion/react\";\nimport useSound from \"use-sound\";\nimport AdSense from \"src/component/AdSense\";\nimport { IoMdClose } from \"react-icons/io\";\n\nconst style = {\n    flexBox: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItem: \"center\",\n\n        \"@media(max-width:1000px)\": {},\n        \"@media(max-width:767px)\": {},\n    },\n    gridBox: {\n        display: \"grid\",\n        gap: \"16px\",\n    },\n    logoBox: {\n        height: \"-webkit-fill-available\",\n        alignItems: \"end\",\n        display: \"grid\",\n        justifyContent: \"start\",\n    },\n    CombineBox: {\n        display: \"grid\",\n        paddingBottom: \"20px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"calc(100vh - 190px)\"\n    },\n    buttonHandle: {\n        display: \"flex\",\n        justifyContent: \"end\",\n        gap: \"8px\",\n    },\n    boxInner: {\n        backgroundImage: \"url('/images/rewardBack.png')\", backgroundSize: \"cover\",\n        textAlign: \"center\",\n        position: \"relative\",\n        top: \"-40px\",\n        maxWidth: \"321px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        padding: \"35px\",\n        borderRadius: \"20px\",\n        \"@media(max-width:600px)\": {\n            maxWidth: \"235px\",\n            padding: \"10px 15px\",\n        },\n    },\n\n};\nconst MainBox = styled(Box)(({ theme }) => ({\n    // padding: \"60px 0px 0 0px\",\n    overflow: \"auto\",\n    // display: \"grid\",\n    // '-webkit-align-items': \"end\",\n    // '-webkit-box-align': \"end\",\n    // width: \"100%\",\n    // '-ms-flex-align': \"end\",\n    // '-ms-flex-line-pack': \"space-between\",\n    // alignContent: \"space-around\",\n}));\nconst InnerBox = styled(Box)(({ theme }) => ({\n    borderTop: \"1px solid #E5E5E5\",\n    display: \"flex\",\n    justifyContent: \"center\"\n}));\n\nconst TakeImg = styled(\"img\")(({ theme }) => ({\n    maxWidth: \"409px\",\n    \"@media(max-width:600px)\": {\n        maxWidth: \"310px\",\n    },\n    \"@media(max-width:450px)\": {\n        maxWidth: \"290px\",\n    },\n}));\nconst TaddyImg = styled(\"img\")(({ theme }) => ({\n    width: \"160px\",\n    \"@media(max-width:650px)\": {\n        width: \"150px\"\n    },\n    \"@media(max-width:500px)\": {\n        width: \"140px\"\n    },\n}));\nfunction Complete() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const theme = useTheme();\n    const [closeAdd, setCloseAdd] = useState(true);\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n    const [winner, { stop, play }] = useSound('images/winners_W9Cpenj.mp3', { preload: true });\n    // useEffect(()=>{\n    //     winner()  \n\n    // }, [])\n    return (\n        <MainBox style={{ position: \"relative\", height: \"100vh\" }}>\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Box sx={style.CombineBox}>\n                            <Box>\n                                <Box sx={{ position: \"relative\", zIndex: \"1\" }}>\n                                    <TakeImg src={isMobile ? \"images/starback1.png\" : \"images/starback.png\"} alt=\"\" />\n                                    <Box sx={{\n                                        position: \"absolute\", bottom: \"47px\", left: \"50%\",\n                                        textAlign: \"center\",\n                                        transform: \"translateX(-50%)\",\n                                        minHeight: \"80px\",\n                                        display: \"grid\",\n                                        \"@media(max-width:600px)\": {\n                                            bottom: \"18px\",\n                                        },\n                                    }}>\n                                        <Typography color={\"rgba(255, 255, 255, 1)\"} variant=\"h4\">{location?.state?.levelNo || \" \"}</Typography>\n                                        <Typography variant=\"h1\" color={\"rgba(255, 255, 255, 1)\"}>COMPLETE</Typography>\n                                    </Box>\n                                </Box>\n                                <Box sx={style.boxInner}>\n                                    <Box sx={{\n                                        display: \"grid\", minHeight: \"200px\", padding: \"30px 0\", gap: \"25px\",\n                                        \"@media(max-width:500px)\": {\n                                            gap: \"20px\",\n                                        },\n                                    }}>\n                                        <Box>\n                                            <Typography variant=\"h3\" color={\"rgba(45, 43, 41, 1)\"} fontWeight={\"600\"}>Good job, {localStorage.getItem(\"childName\") || \" \"}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography variant=\"h4\" color={\"rgba(254, 141, 67, 1)\"} fontWeight={\"800\"}>Reward</Typography>\n                                            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"5px\", justifyContent: \"center\" }}>\n                                                <img src=\"images/Coin.png\" alt=\"\"\n                                                    style={{ width: \"32px\", height: \"32px\" }} /><Typography color={\"rgba(254, 141, 67, 1)\"} variant=\"h1\">{location?.state?.totalPoints || \" \"}</Typography>\n                                            </Box></Box>\n                                        <Box>\n                                            <Button fullWidth onClick={() => { navigate(\"/dashboard\") }} variant=\"contained\">Yay, OK!</Button>\n                                        </Box></Box>\n                                </Box>\n                            </Box>\n\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Container>\n            <Box sx={{ position: \"fixed\", bottom: \"0\", width: \"100%\" }}>\n                <Container>\n                    <Box sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                    }}>\n                        <Box onClick={() => { navigate(\"/dashboard\") }} sx={{\n                            position: \"relative\",\n                            left: \"50px\",\n                            display: \"flex\",\n                        }}>\n                            <TaddyImg alt=\"\" src=\"images/Coco-Idle_Without_Talking.gif\" />\n                            <img alt=\"\" src=\"images/coinStar.png\" style={{\n                                position: \"relative\",\n                                left: \"-100px\",\n                                maxWidth: \"180px\"\n                            }} />\n\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n\n        </MainBox>\n    );\n}\n\nexport default Complete;\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n"],"names":["props","className","width","height","useEffect","script","document","createElement","async","src","setAttribute","crossOrigin","body","appendChild","removeChild","window","adsbygoogle","push","adStyle","display","adContentStyle","_jsx","concat","style","children","flexBox","justifyContent","alignItem","gridBox","gap","logoBox","alignItems","CombineBox","paddingBottom","buttonHandle","boxInner","backgroundImage","backgroundSize","textAlign","position","top","maxWidth","left","transform","padding","borderRadius","MainBox","styled","Box","_ref","theme","overflow","TakeImg","_ref2","borderTop","_ref3","TaddyImg","_ref4","_location$state","_location$state2","navigate","useNavigate","location","useLocation","useTheme","closeAdd","setCloseAdd","useState","isMobile","useMediaQuery","breakpoints","down","winner","stop","play","useSound","preload","_jsxs","Container","Grid","container","spacing","item","xs","sx","zIndex","alt","bottom","minHeight","Typography","color","variant","state","levelNo","fontWeight","localStorage","getItem","totalPoints","Button","fullWidth","onClick","_temp","callback","_ref$volume","volume","_ref$playbackRate","playbackRate","_ref$soundEnabled","soundEnabled","_ref$interrupt","interrupt","onload","delegated","_objectWithoutPropertiesLoose","_excluded","HowlConstructor","React__default","isMounted","_React$useState","duration","setDuration","_React$useState2","sound","setSound","handleLoad","call","this","current","then","mod","_mod$Howl","Howl","_extends","Array","isArray","rate","JSON","stringify","options","forceSoundEnabled","id","pause"],"sourceRoot":""}