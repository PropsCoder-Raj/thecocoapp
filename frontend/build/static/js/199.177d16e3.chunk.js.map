{"version":3,"file":"static/js/199.177d16e3.chunk.js","mappings":"4UAcA,MAAMA,EAAS,CACbC,eAAgB,CACd,UAAW,CACTC,MAAO,UACPC,MAAO,kBACPC,OAAQ,kBACRC,YAAa,kBACbC,OAAQ,oBACRC,aAAc,MACd,0BAA2B,CACzBJ,MAAO,kBACPC,OAAQ,kBACRC,YAAa,qBAkMrB,QA5LA,SAAgBG,GACd,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBC,GAAWC,EAAAA,EAAAA,MAiCXC,EAAkBC,UACtB,MAAMC,EAAMC,EAAAA,EAAUC,iBACtB,IAAK,IAADC,EAAAC,EACF,MAAMC,QAAYC,EAAAA,EAAMC,KAAKP,EAAK,CAChCQ,OAAe,OAARjB,QAAQ,IAARA,GAAe,QAAPY,EAARZ,EAAUkB,aAAK,IAAAN,OAAP,EAARA,EAAiBK,MAAMA,SAAiB,OAARjB,QAAQ,IAARA,GAAe,QAAPa,EAARb,EAAUkB,aAAK,IAAAL,OAAP,EAARA,EAAiBI,SAGvC,MAAfH,EAAIK,SACNC,EAAAA,GAAMC,QAAQP,EAAIQ,KAAKC,SACvBzB,GAAa,GACbI,EAAKsB,WAAWC,MAASC,IAAI,EAAG,KAAKC,QAEzC,CAAE,MAAOC,GAAQ,IAADC,EAAAC,EACdV,EAAAA,GAAMQ,OACC,OAALA,QAAK,IAALA,GAAe,QAAVC,EAALD,EAAOG,gBAAQ,IAAAF,GAAM,QAANC,EAAfD,EAAiBP,YAAI,IAAAQ,OAAhB,EAALA,EAAuBP,UACrB,+CAEJzB,GAAa,EACf,GAGF,OACEkC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAAQC,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,IAAK,OAAQC,UAAW,UAAWN,SAAA,EAC7DH,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKrD,MAAO,sBAAuBsD,GAAI,EAAET,SAAC,kBAG9DH,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKrD,MAAO,sBAAsB6C,SAAC,gCAGvDH,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLC,cAAe,CACbC,IAAK,IAEPC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCH,IAAKE,EAAAA,KAEFE,OAAO,EAAG,wBACVC,SAAS,4BAEdC,SAvEiB7C,UAAmB,IAAD8C,EACzCxD,GAAa,GACb,MAAMW,EACsB,WAAlB,OAART,QAAQ,IAARA,GAAe,QAAPsD,EAARtD,EAAUkB,aAAK,IAAAoC,OAAP,EAARA,EAAiBC,MACb7C,EAAAA,EAAU8C,eACV9C,EAAAA,EAAU+C,gBAChB,IAAK,IAADC,EAAAC,EACF,MAAM7C,QAAYC,EAAAA,EAAMC,KAAKP,EAAK,CAChCQ,OAAe,OAARjB,QAAQ,IAARA,GAAe,QAAP0D,EAAR1D,EAAUkB,aAAK,IAAAwC,OAAP,EAARA,EAAiBzC,MAAMA,SAAiB,OAARjB,QAAQ,IAARA,GAAe,QAAP2D,EAAR3D,EAAUkB,aAAK,IAAAyC,OAAP,EAARA,EAAiB1C,OACxD8B,IAAKa,EAAOb,MAGW,IAADc,EAAxB,GAAmB,MAAf/C,EAAIK,OACwB,YAAlB,OAARnB,QAAQ,IAARA,GAAe,QAAP6D,EAAR7D,EAAUkB,aAAK,IAAA2C,OAAP,EAARA,EAAiBN,MACnBlD,EAAS,cAETA,EAAS,cAEXyD,aAAaC,QAAQ,QAASjD,EAAIQ,KAAK0C,OACvC5C,EAAAA,GAAMC,QAAQP,EAAIQ,KAAKC,SACvBzB,GAAa,EAEjB,CAAE,MAAO8B,GAAQ,IAADqC,EAAAC,EACd9C,EAAAA,GAAMQ,OACC,OAALA,QAAK,IAALA,GAAe,QAAVqC,EAALrC,EAAOG,gBAAQ,IAAAkC,GAAM,QAANC,EAAfD,EAAiB3C,YAAI,IAAA4C,OAAhB,EAALA,EAAuB3C,UACrB,+CAEJzB,GAAa,EACf,GA2CiCqC,SAE1BgC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,OACAC,EAAM,WACNC,EAAU,aACVC,EAAY,aACZC,EAAY,QACZC,EAAO,OACPlB,EAAM,cACNmB,GACDZ,EAAA,OACC/B,EAAAA,EAAAA,MAAC4C,EAAAA,GAAI,CAAC3B,SAAUwB,EAAa1C,SAAA,EAC3BH,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAAC3C,GAAI,CAAE4C,OAAQ,UAAW/C,UAC7BC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EACFH,EAAAA,EAAAA,KAACmD,EAAAA,EAAW,CACVC,WAAS,EACTxD,MAAOyD,QAAQP,EAAQ/B,KAAO2B,EAAO3B,KACrCT,GAAIlD,EAAOC,eAAe8C,UAE1BH,EAAAA,EAAAA,KAACsD,IAAQ,CACPC,MAAO3B,EAAOb,IACdyC,aAAa,WACbC,aAAa,MACbC,SAAWC,IACTZ,EAAc,MAAOY,EAAS,EAEhCC,KAAK,MACLC,GAAG,UACHC,MAAO,CACLvD,QAAS,OACTwD,eAAgB,SAChBxG,MAAO,OACPiD,IAAK,QAEPwD,UAAW,EACXC,QAAQ,aAGXnB,EAAQ/B,KAAO2B,EAAO3B,MACrBf,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACpD,MAAM,QAAO6C,SAAEuC,EAAO3B,YAKxCX,EAAAA,EAAAA,MAAC6C,EAAAA,GAAI,CAAA9C,SAAA,EACHH,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,CAAE4D,UAAW,QAAS/D,UAC7BC,EAAAA,EAAAA,MAAC+D,EAAAA,EAAM,CACL5C,KAAK,SACLZ,QAAQ,YACRyD,SAAUvG,EACVuF,WAAS,EACTU,MAAO,CAAEO,SAAU,SAAUlE,SAAA,CAC9B,SAEEtC,IAAamC,EAAAA,EAAAA,KAACsE,EAAAA,EAAsB,UAGzCtE,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CACFC,GAAI,CACFM,GAAI,QACJT,UAEY,QAAbiC,EAAAlE,EAAKqG,gBAAQ,IAAAnC,OAAA,EAAbA,EAAeoC,SAAU,IAAkB,QAAbnC,EAAAnE,EAAKqG,gBAAQ,IAAAlC,OAAA,EAAbA,EAAeoC,SAAU,GACtDrE,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CACTC,QAAQ,KACRmD,MAAO,CACLxG,MAAM,sBACNoH,SAAU,OACVC,UAAW,SACXC,WAAY,MACZC,WAAY,QACZ1E,SAAA,CACH,qBAGe,QAAdmC,EAACpE,EAAKqG,gBAAQ,IAAAjC,GAAS,QAATC,EAAbD,EAAekC,eAAO,IAAAjC,OAAT,EAAbA,EAAwBuC,WAAWC,SAAS,EAAG,KAAK,IACvC,QAAdvC,EAACtE,EAAKqG,gBAAQ,IAAA/B,GAAS,QAATC,EAAbD,EAAeiC,eAAO,IAAAhC,OAAT,EAAbA,EAAwBqC,WAAWC,SAAS,EAAG,KAAK,YAIvD/E,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTwD,eAAgB,SAChBnD,GAAI,QACJT,UAEFC,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CAACC,QAAQ,QAAQrD,MAAO,sBAAsB6C,SAAA,CAAC,wBAExDH,EAAAA,EAAAA,KAAA,QACE8D,MAAO,CACLxG,MAAO,uBACP0H,OAAQ,WAEVC,QAAS1G,EAAgB4B,SAC1B,+BAQN,QAMnB,C","sources":["views/auth/verify-otp/Verify.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Box, Button, FormControl, Grid, Typography } from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport ApiConfig from \"src/config/APICongig\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport OTPInput from \"otp-input-react\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport toast from \"react-hot-toast\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = {\r\n  otpFormControl: {\r\n    \"& input\": {\r\n      color: \"#0B1426\",\r\n      width: \"48px !important\",\r\n      height: \"48px !important\",\r\n      marginRight: \"10px !important\",\r\n      border: \"1px solid #D8D8D8\",\r\n      borderRadius: \"8px\",\r\n      \"@media(max-width:460px)\": {\r\n        width: \"45px !important\",\r\n        height: \"45px !important\",\r\n        marginRight: \"7px !important\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nfunction Verify(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const location = useLocation();\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    const url =\r\n      location?.state?.type === \"login\"\r\n        ? ApiConfig.loginVerifyOtp\r\n        : ApiConfig.signupVerifyOtp;\r\n    try {\r\n      const res = await axios.post(url, {\r\n        email: location?.state?.email.email || location?.state?.email,\r\n        otp: values.otp,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        if (location?.state?.type === \"signUp\") {\r\n          navigate(\"/add-child\");\r\n        } else {\r\n          navigate(\"/dashboard\");\r\n        }\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        toast.success(res.data.message);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\r\n        error?.response?.data?.message ||\r\n          \"Something went wrong please try again later\"\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const reSendOTPHandle = async () => {\r\n    const url = ApiConfig.loginGenerateOtp;\r\n    try {\r\n      const res = await axios.post(url, {\r\n        email: location?.state?.email.email || location?.state?.email,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        toast.success(res.data.message);\r\n        setIsLoading(false);\r\n        auth.setEndTime(moment().add(3, \"m\").unix());\r\n      }\r\n    } catch (error) {\r\n      toast.error(\r\n        error?.response?.data?.message ||\r\n          \"Something went wrong please try again later\"\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Verify\">\r\n      <Box sx={{ display: \"grid\", gap: \"13px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h1\" color={\"rgba(67, 69, 71, 1)\"} mt={1}>\r\n          Verification\r\n        </Typography>\r\n        <Typography variant=\"h4\" color={\"rgba(67, 69, 71, 1)\"}>\r\n          You will get OTP via email\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            otp: \"\",\r\n          }}\r\n          validationSchema={yup.object().shape({\r\n            otp: yup\r\n              .string()\r\n              .length(4, \"OTP must be 4 digits\")\r\n              .required(\"Please enter your OTP.\"),\r\n          })}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            touched,\r\n            values,\r\n            setFieldValue,\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid sx={{ margin: \"13px 0\" }}>\r\n                <Box>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(touched.otp && errors.otp)}\r\n                    sx={styles.otpFormControl}\r\n                  >\r\n                    <OTPInput\r\n                      value={values.otp}\r\n                      inputVariant=\"standard\"\r\n                      autoComplete=\"off\"\r\n                      onChange={(otpValue) => {\r\n                        setFieldValue(\"otp\", otpValue);\r\n                      }}\r\n                      name=\"otp\"\r\n                      id=\"inputID\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        width: \"100%\",\r\n                        gap: \"15px\",\r\n                      }}\r\n                      OTPLength={4}\r\n                      otpType=\"number\"\r\n                    />\r\n                  </FormControl>\r\n                  {touched.otp && errors.otp && (\r\n                    <Typography color=\"error\">{errors.otp}</Typography>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid>\r\n                <Box sx={{ marginTop: \"26px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    disabled={isLoading}\r\n                    fullWidth\r\n                    style={{ maxWidth: \"370px\" }}\r\n                  >\r\n                    Verify\r\n                    {isLoading && <ButtonCircularProgress />}\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    mt: \"13px\",\r\n                  }}\r\n                >\r\n                  {auth.timeLeft?.minutes > 0 || auth.timeLeft?.seconds > 0 ? (\r\n                    <Typography\r\n                      variant=\"h3\"\r\n                      style={{\r\n                        color:\"rgba(60, 60, 60, 1)\",\r\n                        fontSize: \"18px\",\r\n                        fontStyle: \"normal\",\r\n                        fontWeight: \"500\",\r\n                        lineHeight: \"24px\",\r\n                      }}\r\n                    >                   \r\n                       Resend OTP in           \r\n                      &nbsp;\r\n                      {auth.timeLeft?.minutes?.toString().padStart(2, \"0\")}:\r\n                      {auth.timeLeft?.seconds?.toString().padStart(2, \"0\")}\r\n                      &nbsp;s\r\n                    </Typography>\r\n                  ) : (\r\n                    <Box\r\n                      sx={{\r\n                        display: \"grid\",\r\n                        justifyContent: \"center\",\r\n                        mt: \"13px\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body1\" color={\"rgba(60, 60, 60, 1)\"}>\r\n                        Didn’t get OTP?\r\n                        <span\r\n                          style={{\r\n                            color: \"rgba(0, 186, 242, 1)\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={reSendOTPHandle}\r\n                        >\r\n                          &nbsp;Resend OTP\r\n                        </span>\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Verify;\r\n"],"names":["styles","otpFormControl","color","width","height","marginRight","border","borderRadius","props","isLoading","setIsLoading","useState","location","useLocation","auth","useContext","AuthContext","navigate","useNavigate","reSendOTPHandle","async","url","ApiConfig","loginGenerateOtp","_location$state5","_location$state6","res","axios","post","email","state","status","toast","success","data","message","setEndTime","moment","add","unix","error","_error$response2","_error$response2$data","response","_jsx","Page","title","children","_jsxs","Box","sx","display","gap","textAlign","Typography","variant","mt","Formik","initialValues","otp","validationSchema","yup","shape","length","required","onSubmit","_location$state","type","loginVerifyOtp","signupVerifyOtp","_location$state2","_location$state3","values","_location$state4","localStorage","setItem","token","_error$response","_error$response$data","_ref","_auth$timeLeft","_auth$timeLeft2","_auth$timeLeft3","_auth$timeLeft3$minut","_auth$timeLeft4","_auth$timeLeft4$secon","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","Form","Grid","margin","FormControl","fullWidth","Boolean","OTPInput","value","inputVariant","autoComplete","onChange","otpValue","name","id","style","justifyContent","OTPLength","otpType","marginTop","Button","disabled","maxWidth","ButtonCircularProgress","timeLeft","minutes","seconds","fontSize","fontStyle","fontWeight","lineHeight","toString","padStart","cursor","onClick"],"sourceRoot":""}