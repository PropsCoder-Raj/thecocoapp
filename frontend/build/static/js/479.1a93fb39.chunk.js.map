{"version":3,"file":"static/js/479.1a93fb39.chunk.js","mappings":"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","sources":["config/APICongig.js","views/auth/login/Login.js"],"sourcesContent":["\r\n//Live URL\r\nconst url = \"http://thecocoapp.com:8080/api/v1/\";\r\n\r\n//Local URL\r\n// const url = \"http://localhost:3500/api/v1/\";\r\n\r\nconst ApiConfig = {\r\n  loginGenerateOtp: `${url}auth/login/email-with-pin`,\r\n  loginVerifyOtp: `${url}auth/login/verify-otp`,\r\n\r\n  signupGenerateOtp: `${url}auth/signup/generate-otp`,\r\n  signupVerifiedEmail: `${url}auth/signup-with-verfied-email-pin`,\r\n  signupVerifyOtp: `${url}auth/signup/verify-otp`,\r\n\r\n  setPin: `${url}auth/send-otp-for-set-pin`,\r\n  setPinChange: `${url}auth/verify-otp-for-pin-change`,\r\n  resetPin: `${url}auth/reset-pin-password`,\r\n  \r\n\r\n  createChild: `${url}child/create`,\r\n  getSchool: `${url}school/get-all-schools`,\r\n\r\n  //child\r\n  getAllChild: `${url}child/get-all-childs`,\r\n  switchChild: `${url}child/switch-to-active-child`,\r\n  //modules\r\n  allModules : `${url}dashboard/get-all-modules`,\r\n  //leason\r\n  getLeason: `${url}dashboard/get-lessons`,\r\n  //questions\r\n  getQuestions: `${url}dashboard/get-questions`,\r\n  attemptQuestions: `${url}questions/attempt-questions`,\r\n  \r\n};\r\nexport default ApiConfig;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport ApiConfig from \"src/config/APICongig\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport toast from 'react-hot-toast';\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport moment from \"moment\";\r\nimport OTPInput from \"otp-input-react\";\r\n\r\n\r\n\r\nconst styles = {\r\n  otpFormControl: {\r\n    \"& input\": {\r\n      color: \"#0B1426\",\r\n      width: \"48px !important\",\r\n      height: \"48px !important\",\r\n      marginRight: \"10px !important\",\r\n      border: \"1px solid #D8D8D8\",\r\n      borderRadius: \"8px\",\r\n      \"@media(max-width:460px)\": {\r\n        width: \"45px !important\",\r\n        height: \"45px !important\",\r\n        marginRight: \"7px !important\",\r\n      },\r\n    },\r\n  },\r\n};\r\nfunction Login(props) {\r\n  // const [isRememberMe, setIsRememberMe] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n   const auth = useContext(AuthContext);\r\n  const formInitialSchema = \r\n  // isRememberMe\r\n  //   ? \r\n    {\r\n      email: \"\",\r\n      pin:\"\"\r\n    }\r\n    // : {\r\n    //   email: window.sessionStorage.getItem(\"email\") || \"\",\r\n    // };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(ApiConfig.loginGenerateOtp, {\r\n        email: values.email,\r\n        pin: values.pin,\r\n      });\r\n      if (res.status === 200) {\r\n        toast.success(res.data.message);\r\n        setIsLoading(false);\r\n        navigate(\"/dashboard\");\r\n        localStorage.setItem(\"token\", res.data.token);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\r\n        error?.response?.data?.message ||\r\n          \"Something went wrong please try again later\"\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  };\r\nuseEffect(()=>{\r\n  localStorage.removeItem(\"emailReset\")\r\n},[])\r\n  return (\r\n    <Page title=\"Login\">\r\n      <Box sx={{ display: \"grid\", gap: \"13px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h1\" color={\"rgba(67, 69, 71, 1)\"} mt={1}>\r\n          Login\r\n        </Typography>\r\n        <Typography variant=\"h4\" color={\"rgba(67, 69, 71, 1)\"}>\r\n          Welcome back! Login now to see\r\n          <br /> where you left off\r\n        </Typography>\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={formInitialSchema}\r\n          validationSchema={yup.object().shape({\r\n            email: yup.string().required(\"Please enter your email address.\"),\r\n            pin: yup\r\n              .string()\r\n              .length(4, \"OTP must be 4 digits\")\r\n              .required(\"Please enter your OTP.\"),\r\n          })}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            touched,\r\n            values,\r\n            setFieldValue\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid sx={{ margin: \"13px 0\" }}>\r\n                <TextField\r\n                  placeholder=\"Email ID\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  inputProps={{ maxLength: 256 }}\r\n                  value={values.email}\r\n                  name=\"email\"\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  SX={{ padding: \"8px 13px\" }}\r\n                />\r\n                <FormHelperText error>\r\n                  {touched.email && errors.email}\r\n                </FormHelperText>\r\n              </Grid>\r\n              <Grid sx={{ margin: \"13px 0\", textAlign: \"start\" }}>\r\n                <Box >\r\n                  <Typography variant=\"body1\" color={\"rgba(67, 69, 71, 1)\"} sx={{marginBottom:\"13px\"}}>\r\n                    Enter 4-digit pin\r\n                  </Typography>\r\n                  <FormControl\r\n                    fullWidth\r\n                    error={Boolean(touched.pin && errors.pin)}\r\n                    sx={styles.otpFormControl}\r\n                  >\r\n                    <OTPInput\r\n                      value={values.pin}\r\n                      inputVariant=\"standard\"\r\n                      autoComplete=\"off\"\r\n                      onChange={(otpValue) => {\r\n                        setFieldValue(\"pin\", otpValue);\r\n                      }}\r\n                      name=\"pin\"\r\n                      id=\"inputID\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"start\",\r\n                        width: \"100%\",\r\n                        gap: \"15px\",\r\n                      }}\r\n                      OTPLength={4}\r\n                      otpType=\"number\"\r\n                    />\r\n                  </FormControl>\r\n                  {touched.pin && errors.pin && (\r\n                    <FormHelperText error>{errors.pin}</FormHelperText>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n              <Grid sx={{ margin: \"13px 0\", textAlign:\"start\" }}>\r\n                <Typography variant=\"body1\" color={\"rgba(67, 69, 71, 1)\"} sx={{ cursor: \"pointer\" }} onClick={() => { navigate(\"/reset-pin\")}}>\r\n                  Reset pin?\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <Box sx={{ marginTop: \"26px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    disabled={isLoading}\r\n                    fullWidth\r\n                  >\r\n                    Login\r\n                    {isLoading && <ButtonCircularProgress />}\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"grid\",\r\n                    justifyContent: \"center\",\r\n                    mt: \"13px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color={\"rgba(60, 60, 60, 1)\"}>\r\n                    Don’t have an account?\r\n                    <span\r\n                      onClick={() => {\r\n                        navigate(\"/sign-up\");\r\n                      }}\r\n                      style={{ color: \"rgba(0, 186, 242, 1)\", cursor: \"pointer\" }}\r\n                    >\r\n                      &nbsp;Sign up\r\n                    </span>\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["url","loginGenerateOtp","concat","loginVerifyOtp","signupGenerateOtp","signupVerifiedEmail","signupVerifyOtp","setPin","setPinChange","resetPin","createChild","getSchool","getAllChild","switchChild","allModules","getLeason","getQuestions","attemptQuestions","styles","otpFormControl","color","width","height","marginRight","border","borderRadius","props","isLoading","setIsLoading","useState","navigate","useNavigate","useContext","AuthContext","useEffect","localStorage","removeItem","_jsx","Page","title","children","_jsxs","Box","sx","display","gap","textAlign","Typography","variant","mt","Formik","onSubmit","async","res","axios","post","ApiConfig","email","values","pin","status","toast","success","data","message","setItem","token","error","_error$response","_error$response$data","response","initialValues","validationSchema","yup","shape","required","length","_ref","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","Form","Grid","margin","TextField","placeholder","type","fullWidth","size","inputProps","maxLength","value","name","Boolean","onBlur","onChange","SX","padding","FormHelperText","marginBottom","FormControl","OTPInput","inputVariant","autoComplete","otpValue","id","style","justifyContent","OTPLength","otpType","cursor","onClick","marginTop","Button","disabled","ButtonCircularProgress"],"sourceRoot":""}