{"version":3,"file":"static/js/690.d91e331a.chunk.js","mappings":"8PAcA,MAAMA,EAAQ,CACVC,QAAS,CACLC,QAAS,OACTC,eAAgB,gBAChBC,UAAW,SAEX,2BAA4B,CAAC,EAC7B,0BAA2B,CAAC,GAEhCC,QAAS,CACLH,QAAS,OACTI,IAAK,QAETC,QAAS,CACLC,OAAQ,yBACRC,WAAY,MACZP,QAAS,OACTC,eAAgB,SAEpBO,WAAY,CACRR,QAAS,OACTS,cAAe,OACfR,eAAgB,SAChBM,WAAY,SACZD,OAAO,uBAEXI,aAAc,CACVV,QAAS,OACTC,eAAgB,MAChBG,IAAK,OAETO,SAAU,CACNC,gBAAiB,gCAAiCC,eAAgB,QAClEC,UAAW,SACXC,SAAU,WACVC,IAAK,QACLC,SAAU,QACVC,KAAM,MACNC,UAAW,mBACXC,QAAS,OACTC,aAAc,OACd,0BAA2B,CACvBJ,SAAU,QACVG,QAAS,eAKfE,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAYE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAExCE,SAAU,OAQb,IACKC,GAAWL,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAYM,IAAA,IAAC,MAAEH,GAAOG,EAAA,MAAM,CACzCT,QAAS,OACTU,UAAW,oBACX,0BAA2B,CAAEV,QAAS,QACtCW,WAAY,yBACf,IAEKC,GAAUT,EAAAA,EAAAA,IAAO,MAAPA,EAAcU,IAAA,IAAC,MAAEP,GAAOO,EAAA,MAAM,CAC1ChB,SAAU,QACV,0BAA2B,CACvBA,SAAU,SAEd,0BAA2B,CACvBA,SAAU,SAEjB,IACKiB,GAAWX,EAAAA,EAAAA,IAAO,MAAPA,EAAcY,IAAA,IAAC,MAAET,GAAOS,EAAA,MAAM,CAC3CC,MAAO,QACP,0BAA2B,CAC1BA,MAAO,SAER,0BAA2B,CACvBA,MAAO,SAEd,IAiGD,QAhGA,WAAqB,IAADC,EAAAC,EAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXhB,GAAQiB,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcnB,EAAMoB,YAAYC,KAAK,QAC/CC,GAAQ,KAAEC,EAAI,KAAEC,KAAUC,EAAAA,EAAAA,GAAS,6BAA8B,CAAEC,SAAS,IAKnF,OAJAC,EAAAA,EAAAA,YAAU,KACNL,GAAQ,GAET,KAECM,EAAAA,EAAAA,MAAChC,EAAO,CAACxB,MAAO,CAACiB,SAAS,WAAYT,OAAO,SAASiD,SAAA,EAClDC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACxC,SAAS,KAAIsC,UACpBC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEL,UACvBC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGP,UACdC,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAACuC,GAAIjE,EAAMU,WAAW+C,UACtBD,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAAA+B,SAAA,EACAD,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACuC,GAAI,CAAEhD,SAAU,WAAYiD,OAAQ,KAAMT,SAAA,EAC3CC,EAAAA,EAAAA,KAACxB,EAAO,CAACiC,IAAKrB,EAAW,uBAAwB,sBAAuBsB,IAAI,MAC5EZ,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACuC,GAAI,CACLhD,SAAU,WAAYoD,OAAQ,OAAQjD,KAAM,MAC5CJ,UAAW,SACXK,UAAW,mBACXiD,UAAW,OACXpE,QAAS,OACT,0BAA2B,CACvBmE,OAAQ,SAEdZ,SAAA,EACEC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,MAAO,yBAA0BC,QAAQ,KAAIhB,UAAU,OAARd,QAAQ,IAARA,GAAe,QAAPJ,EAARI,EAAU+B,aAAK,IAAAnC,OAAP,EAARA,EAAiBoC,UAAW,OACvFjB,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACE,QAAQ,KAAKD,MAAO,yBAAyBf,SAAC,oBAGlEC,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAACuC,GAAIjE,EAAMa,SAAS4C,UACpBD,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACuC,GAAI,CACL/D,QAAS,OAAQoE,UAAW,QAAShD,QAAS,SAAUhB,IAAK,OAC7D,0BAA2B,CACvBA,IAAK,SAEXmD,SAAA,EACEC,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAAA+B,UACAD,EAAAA,EAAAA,MAACe,EAAAA,EAAU,CAACE,QAAQ,KAAKD,MAAO,sBAAuBI,WAAY,MAAMnB,SAAA,CAAC,aAAWoB,aAAaC,QAAQ,cAAgB,UAE9HtB,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAAA+B,SAAA,EACAC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACE,QAAQ,KAAKD,MAAO,wBAAyBI,WAAY,MAAMnB,SAAC,YAC5ED,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACuC,GAAI,CAAE/D,QAAS,OAAQO,WAAY,SAAUH,IAAK,MAAOH,eAAgB,UAAWsD,SAAA,EACrFC,EAAAA,EAAAA,KAAA,OAAKS,IAAI,kBAAkBC,IAAI,GAC3BpE,MAAO,CAAEsC,MAAO,OAAQ9B,OAAQ,WAAYkD,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,MAAO,wBAAyBC,QAAQ,KAAIhB,UAAU,OAARd,QAAQ,IAARA,GAAe,QAAPH,EAARG,EAAU+B,aAAK,IAAAlC,OAAP,EAARA,EAAiBuC,cAAe,aAElJrB,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAAA+B,UACAC,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,WAAS,EAACC,QAASA,KAAQzC,EAAS,aAAa,EAAIgC,QAAQ,YAAWhB,SAAC,gCAUjHD,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACuC,GAAI,CAAChD,SAAS,QAASoD,OAAO,IAAK/B,MAAM,QAAQmB,SAAA,EAClDC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAF,UACdC,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAACuC,GAAI,CACL/D,QAAS,OACTC,eAAgB,UAClBsD,UACUD,EAAAA,EAAAA,MAAC9B,EAAAA,EAAG,CAACwD,QAASA,KAAQzC,EAAS,aAAa,EAAIwB,GAAI,CAChDhD,SAAS,WACTG,KAAM,OACNlB,QAAQ,QAClBuD,SAAA,EACMC,EAAAA,EAAAA,KAACtB,EAAQ,CAACgC,IAAI,GAAGD,IAAI,0CACjBT,EAAAA,EAAAA,KAAA,OAAKU,IAAI,GAAGD,IAAI,sBAAsBnE,MAAO,CACzCiB,SAAU,WACVG,KAAM,SACND,SAAS,mBAK7BuC,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA2B,UAELC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAF,UACNC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACE,QAAS,EAAEL,UACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGP,UACdC,EAAAA,EAAAA,KAAChC,EAAAA,EAAG,CAACuC,GAAIjE,EAAMY,4BAS3C,C,yVChMA,SAOEuD,EAAsBgB,G,ICLWC,E,aDcb,CAAC,EAAgBD,EAPnCE,EAAE1D,EACF2D,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAA5D,EACV6D,aAAAA,OAAY,IAAAD,EAAG,EAACA,EAAAE,EAAA9D,EAChB+D,aAAAA,OAAY,IAAAD,GAAOA,EAAAE,EAAAhE,EACnBiE,UAAAA,OAAS,IAAAD,GAAQA,EACjBE,EAAMlE,EAANkE,OACGC,E,yIAASC,CAAApE,EAAAqE,GAGRC,EAAkBC,EAAAA,OAAgC,MAClDC,EAAYD,EAAAA,QAAa,GAE/BE,EAAgCF,EAAAA,SAA8B,MAAvDG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAA0BL,EAAAA,SAA4B,MAA/CM,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAa,WACK,oBAAXb,GAETA,EAAOc,KAAKC,MAGVT,EAAUU,SAEZP,EAA8B,IAAlBM,KAAKP,YAInBI,EAASG,K,ECnCsBxB,EDuCtB,WAmBT,OAlBA,mCAAiB0B,MAAK,SAAAC,GACI,IAAAC,EAAnBb,EAAUU,UAGbZ,EAAgBY,QAAkB,QAAXG,EAAGD,EAAIE,YAAI,IAAAD,EAAAA,EAAID,EAAG,QAASE,KAElDd,EAAUU,SAAU,EAEpB,IAAIZ,EAAgBY,QAAOK,EAAC,CAC1B/C,IAAKgD,MAAMC,QAAQjD,GAAOA,EAAM,CAACA,GACjCmB,OAAAA,EACA+B,KAAM7B,EACNK,OAAQa,GACLZ,I,IAKF,WACLK,EAAUU,SAAU,C,IC1DxBtD,EAAAA,EAAAA,WAAgB6B,EAAU,IDiE1Bc,EAAAA,WAAgB,WACVD,EAAgBY,SAAWL,GAC7BC,EACE,IAAIR,EAAgBY,QAAOK,EAAC,CAC1B/C,IAAKgD,MAAMC,QAAQjD,GAAOA,EAAM,CAACA,GACjCmB,OAAAA,EACAO,OAAQa,GACLZ,I,GAWR,CAACwB,KAAKC,UAAUpD,KAInB+B,EAAAA,WAAgB,WACVM,IACFA,EAAMlB,OAAOA,GACbkB,EAAMa,KAAK7B,G,GAOZ,CAACF,EAAQE,IAEZ,IAAMpC,EAAqB8C,EAAAA,aACzB,SAACsB,GACwB,qBAAZA,IACTA,EAAU,CAAC,GAGRhB,IAAWd,GAAiB8B,EAAQC,qBAIrC7B,GACFY,EAAMrD,OAGJqE,EAAQhC,cACVgB,EAAMa,KAAKG,EAAQhC,cAGrBgB,EAAMpD,KAAKoE,EAAQE,I,GAErB,CAAClB,EAAOd,EAAcE,IAGlBzC,EAAO+C,EAAAA,aACX,SAAAwB,GACOlB,GAGLA,EAAMrD,KAAKuE,E,GAEb,CAAClB,IAGGmB,EAAQzB,EAAAA,aACZ,SAAAwB,GACOlB,GAGLA,EAAMmB,MAAMD,E,GAEd,CAAClB,IAaH,MAVqC,CACnCpD,EACA,CACEoD,MAAAA,EACArD,KAAAA,EACAwE,MAAAA,EACAtB,SAAAA,GAKN,C","sources":["views/pages/dashboard/Complete.js","../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    styled,\n    Typography,\n    useMediaQuery,\n} from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"@emotion/react\";\nimport useSound from \"use-sound\";\n\nconst style = {\n    flexBox: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItem: \"center\",\n\n        \"@media(max-width:1000px)\": {},\n        \"@media(max-width:767px)\": {},\n    },\n    gridBox: {\n        display: \"grid\",\n        gap: \"16px\",\n    },\n    logoBox: {\n        height: \"-webkit-fill-available\",\n        alignItems: \"end\",\n        display: \"grid\",\n        justifyContent: \"start\",\n    },\n    CombineBox: {\n        display: \"grid\",\n        paddingBottom: \"20px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height:\"calc(100vh - 190px)\"\n    },\n    buttonHandle: {\n        display: \"flex\",\n        justifyContent: \"end\",\n        gap: \"8px\",\n    },\n    boxInner: {\n        backgroundImage: \"url('/images/rewardBack.png')\", backgroundSize: \"cover\",\n        textAlign: \"center\",\n        position: \"relative\",\n        top: \"-40px\",\n        maxWidth: \"321px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        padding: \"35px\",\n        borderRadius: \"20px\",\n        \"@media(max-width:600px)\": {\n            maxWidth: \"235px\",\n            padding: \"10px 15px\",\n        },\n    },\n\n};\nconst MainBox = styled(Box)(({ theme }) => ({\n    // padding: \"60px 0px 0 0px\",\n    overflow: \"auto\",\n    // display: \"grid\",\n    // '-webkit-align-items': \"end\",\n    // '-webkit-box-align': \"end\",\n    // width: \"100%\",\n    // '-ms-flex-align': \"end\",\n    // '-ms-flex-line-pack': \"space-between\",\n    // alignContent: \"space-around\",\n}));\nconst InnerBox = styled(Box)(({ theme }) => ({\n    padding: \"45px\",\n    borderTop: \"1px solid #E5E5E5\",\n    \"@media(max-width:767px)\": { padding: \"30px\" },\n    background: \"rgba(255, 253, 243, 1)\"\n}));\n\nconst TakeImg = styled(\"img\")(({ theme }) => ({\n    maxWidth: \"409px\",\n    \"@media(max-width:600px)\": {\n        maxWidth: \"310px\",\n    },\n    \"@media(max-width:450px)\": {\n        maxWidth: \"290px\",\n    },\n}));\nconst TaddyImg = styled(\"img\")(({ theme }) => ({\n    width: \"160px\",\n    \"@media(max-width:650px)\": {\n     width: \"150px\"\n    },\n    \"@media(max-width:500px)\": {\n        width: \"140px\"\n    },\n}));\nfunction Complete() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n    const [winner, { stop, play }] = useSound('images/winners_W9Cpenj.mp3', { preload: true });\n    useEffect(()=>{\n        winner()  \n       \n    }, [])\n    return (\n        <MainBox style={{position:\"relative\", height:\"100vh\"}}>\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Box sx={style.CombineBox}>\n                            <Box>\n                                <Box sx={{ position: \"relative\", zIndex: \"1\" }}>\n                                    <TakeImg src={isMobile ? \"images/starback1.png\" :\"images/starback.png\"} alt=\"\" />\n                                    <Box sx={{\n                                        position: \"absolute\", bottom: \"47px\", left: \"50%\",\n                                        textAlign: \"center\",\n                                        transform: \"translateX(-50%)\",\n                                        minHeight: \"80px\",\n                                        display: \"grid\",\n                                        \"@media(max-width:600px)\": {\n                                            bottom: \"18px\",\n                                        },\n                                    }}>\n                                        <Typography color={\"rgba(255, 255, 255, 1)\"} variant=\"h4\">{location?.state?.levelNo || \" \"}</Typography>\n                                        <Typography variant=\"h1\" color={\"rgba(255, 255, 255, 1)\"}>COMPLETE</Typography>\n                                    </Box>\n                                </Box>\n                                <Box sx={style.boxInner}>\n                                    <Box sx={{\n                                        display: \"grid\", minHeight: \"200px\", padding: \"30px 0\", gap: \"25px\",\n                                        \"@media(max-width:500px)\": {\n                                            gap: \"20px\",\n                                        },\n                                    }}>\n                                        <Box>\n                                            <Typography variant=\"h3\" color={\"rgba(45, 43, 41, 1)\"} fontWeight={\"600\"}>Good job, {localStorage.getItem(\"childName\") || \" \"}</Typography>\n                                        </Box>\n                                        <Box>\n                                            <Typography variant=\"h4\" color={\"rgba(254, 141, 67, 1)\"} fontWeight={\"800\"}>Reward</Typography>\n                                            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"5px\", justifyContent: \"center\" }}>\n                                                <img src=\"images/Coin.png\" alt=\"\"\n                                                    style={{ width: \"32px\", height: \"32px\" }} /><Typography color={\"rgba(254, 141, 67, 1)\"} variant=\"h1\">{location?.state?.totalPoints || \" \"}</Typography>\n                                            </Box></Box>\n                                        <Box>\n                                            <Button fullWidth onClick={() => { navigate(\"/dashboard\") }} variant=\"contained\">Yay, OK!</Button>\n                                        </Box></Box>\n                                </Box>\n                            </Box>\n                           \n                        </Box>\n                     \n                    </Grid>\n                </Grid>\n            </Container>\n            <Box sx={{position:\"fixed\", bottom:\"0\", width:\"100%\"}}>\n                <Container>\n            <Box sx={{\n                display: \"flex\",\n                justifyContent: \"center\"\n            }}>\n                        <Box onClick={() => { navigate(\"/dashboard\") }} sx={{\n                            position:\"relative\",\n                            left: \"50px\",\n                            display:\"flex\",\n                }}>\n                        <TaddyImg alt=\"\" src=\"images/Coco-Idle_Without_Talking.gif\"  />\n                            <img alt=\"\" src=\"images/coinStar.png\" style={{\n                                position: \"relative\",\n                                left: \"-100px\",\n                                maxWidth:\"180px\"\n}}/>\n                        \n                        </Box>\n            </Box></Container>\n            <InnerBox>\n               \n                <Container>\n                    <Grid spacing={4}>\n                        <Grid item xs={12}>\n                            <Box sx={style.buttonHandle}>\n\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </InnerBox></Box>\n        </MainBox>\n    );\n}\n\nexport default Complete;\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n"],"names":["style","flexBox","display","justifyContent","alignItem","gridBox","gap","logoBox","height","alignItems","CombineBox","paddingBottom","buttonHandle","boxInner","backgroundImage","backgroundSize","textAlign","position","top","maxWidth","left","transform","padding","borderRadius","MainBox","styled","Box","_ref","theme","overflow","InnerBox","_ref2","borderTop","background","TakeImg","_ref3","TaddyImg","_ref4","width","_location$state","_location$state2","navigate","useNavigate","location","useLocation","useTheme","isMobile","useMediaQuery","breakpoints","down","winner","stop","play","useSound","preload","useEffect","_jsxs","children","_jsx","Container","Grid","container","spacing","item","xs","sx","zIndex","src","alt","bottom","minHeight","Typography","color","variant","state","levelNo","fontWeight","localStorage","getItem","totalPoints","Button","fullWidth","onClick","_temp","callback","_ref$volume","volume","_ref$playbackRate","playbackRate","_ref$soundEnabled","soundEnabled","_ref$interrupt","interrupt","onload","delegated","_objectWithoutPropertiesLoose","_excluded","HowlConstructor","React__default","isMounted","_React$useState","duration","setDuration","_React$useState2","sound","setSound","handleLoad","call","this","current","then","mod","_mod$Howl","Howl","_extends","Array","isArray","rate","JSON","stringify","options","forceSoundEnabled","id","pause"],"sourceRoot":""}