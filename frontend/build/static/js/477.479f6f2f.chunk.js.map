{"version":3,"file":"static/js/477.479f6f2f.chunk.js","mappings":"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","sources":["config/APICongig.js","views/auth/resetPin/ResetPassword.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormHelperText/formHelperTextClasses.js","../node_modules/@mui/material/FormHelperText/FormHelperText.js"],"sourcesContent":["\r\n//Live URL\r\nconst url = \"http://thecocoapp.com:8080/api/v1/\";\r\n\r\n//Local URL\r\n// const url = \"http://localhost:3500/api/v1/\";\r\n\r\nconst ApiConfig = {\r\n  loginGenerateOtp: `${url}auth/login/email-with-pin`,\r\n  loginVerifyOtp: `${url}auth/login/verify-otp`,\r\n\r\n  signupGenerateOtp: `${url}auth/signup/generate-otp`,\r\n  signupVerifiedEmail: `${url}auth/signup-with-verfied-email-pin`,\r\n  signupVerifyOtp: `${url}auth/signup/verify-otp`,\r\n\r\n  setPin: `${url}auth/send-otp-for-set-pin`,\r\n  setPinChange: `${url}auth/verify-otp-for-pin-change`,\r\n  resetPin: `${url}auth/reset-pin-password`,\r\n  \r\n\r\n  createChild: `${url}child/create`,\r\n  getSchool: `${url}school/get-all-schools`,\r\n\r\n  //child\r\n  getAllChild: `${url}child/get-all-childs`,\r\n  switchChild: `${url}child/switch-to-active-child`,\r\n  //modules\r\n  allModules : `${url}dashboard/get-all-modules`,\r\n  //leason\r\n  getLeason: `${url}dashboard/get-lessons`,\r\n  //questions\r\n  getQuestions: `${url}dashboard/get-questions`,\r\n  attemptQuestions: `${url}questions/attempt-questions`,\r\n  \r\n};\r\nexport default ApiConfig;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport ApiConfig from \"src/config/APICongig\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport toast from 'react-hot-toast';\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport moment from \"moment\";\r\nimport OTPInput from \"otp-input-react\";\r\nconst styles = {\r\n    otpFormControl: {\r\n        \"& input\": {\r\n            color: \"#0B1426\",\r\n            width: \"48px !important\",\r\n            height: \"48px !important\",\r\n            marginRight: \"10px !important\",\r\n            border: \"1px solid #D8D8D8\",\r\n            borderRadius: \"8px\",\r\n            \"@media(max-width:460px)\": {\r\n                width: \"45px !important\",\r\n                height: \"45px !important\",\r\n                marginRight: \"7px !important\",\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nfunction SignUp(props) {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const auth = useContext(AuthContext);\r\n    const formInitialSchema = {\r\n        pin: \"\",\r\n        Cotp: \"\"\r\n    }\r\n    const handleFormSubmit = async (values) => {\r\n        setIsLoading(true);\r\n        const token = location?.state?.token\r\n        try {\r\n            const res = await axios({\r\n                method: \"POST\",\r\n                url: ApiConfig.resetPin,\r\n                headers: { token: token },\r\n                data:{\r\n                    new_pin: values.pin,\r\n                    confirm_pin: values.Cotp\r\n                }\r\n            });\r\n           \r\n\r\n            if (res.status === 200) {\r\n                toast.success(res.data.message);\r\n                setIsLoading(false);\r\n                navigate(\"/login\");\r\n                auth.setEndTime(moment().add(0, \"m\").unix());\r\n            }\r\n        } catch (error) {\r\n            toast.error(\r\n                error?.response?.data?.message ||\r\n                \"Something went wrong please try again later\"\r\n            );\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Page title=\"Reset Password\">\r\n            <Box sx={{ display: \"grid\", gap: \"13px\", textAlign: \"center\" }}>\r\n                <Typography variant=\"h1\" color={\"rgba(67, 69, 71, 1)\"} mt={1}>\r\n                    Reset PIN\r\n                </Typography>\r\n                <Typography variant=\"h4\" color={\"rgba(67, 69, 71, 1)\"}>\r\n                    Forgot your PIN?\r\n                    <br />Reset it now to restore your access.\r\n                </Typography>\r\n                <Formik\r\n                    onSubmit={handleFormSubmit}\r\n                    initialValues={formInitialSchema}\r\n                    validationSchema={yup.object().shape({\r\n                        pin: yup\r\n                            .string()\r\n                            .length(4, \"OTP must be 4 digits\")\r\n                            .required(\"Please enter your OTP.\"),\r\n                        Cotp: yup\r\n                            .string()\r\n                            .length(4, \"OTP must be 4 digits\")\r\n                            .required(\"Please enter your OTP.\")\r\n                            .oneOf(\r\n                                [yup.ref(\"pin\"), null],\r\n                                \"Pin should match.\"\r\n                            ),\r\n                    })}\r\n                >\r\n                    {({\r\n                        errors,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        touched,\r\n                        values,\r\n                        setFieldValue\r\n                    }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Grid sx={{ margin: \"13px 0\", textAlign: \"start\" }}>\r\n                                <Box >\r\n                                    <Typography variant=\"body1\" color={\"rgba(67, 69, 71, 1)\"} sx={{ marginBottom: \"13px\" }}>\r\n                                        Enter 4-digit pin\r\n                                    </Typography>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        error={Boolean(touched.pin && errors.pin)}\r\n                                        sx={styles.otpFormControl}\r\n                                    >\r\n                                        <OTPInput\r\n                                            value={values.pin}\r\n                                            inputVariant=\"standard\"\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(otpValue) => {\r\n                                                setFieldValue(\"pin\", otpValue);\r\n                                            }}\r\n                                            name=\"pin\"\r\n                                            id=\"inputID\"\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"start\",\r\n                                                width: \"100%\",\r\n                                                gap: \"15px\",\r\n                                            }}\r\n                                            OTPLength={4}\r\n                                            otpType=\"number\"\r\n                                        />\r\n                                    </FormControl>\r\n                                    {touched.pin && errors.pin && (\r\n                                        <FormHelperText error>{errors.pin}</FormHelperText>\r\n                                    )}\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid sx={{ margin: \"13px 0\", textAlign: \"start\" }}>\r\n                                <Box >\r\n                                    <Typography variant=\"body1\" color={\"rgba(67, 69, 71, 1)\"} sx={{ marginBottom: \"13px\" }}>\r\n                                        Confirm 4-digit pin\r\n                                    </Typography>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        error={Boolean(touched.Cotp && errors.Cotp)}\r\n                                        sx={styles.otpFormControl}\r\n                                    >\r\n                                        <OTPInput\r\n                                            value={values.Cotp}\r\n                                            inputVariant=\"standard\"\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(otpValue) => {\r\n                                                setFieldValue(\"Cotp\", otpValue);\r\n                                            }}\r\n                                            name=\"Cotp\"\r\n                                            id=\"inputID\"\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"start\",\r\n                                                width: \"100%\",\r\n                                                gap: \"15px\",\r\n                                            }}\r\n                                            autoFocus\r\n                                            OTPLength={4}\r\n                                            otpType=\"number\"\r\n                                        />\r\n                                    </FormControl>\r\n                                    {touched.Cotp && errors.Cotp && (\r\n                                        <FormHelperText error>{errors.Cotp}</FormHelperText>\r\n                                    )}\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <Box sx={{ marginTop: \"18px\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        disabled={isLoading}\r\n                                        fullWidth\r\n                                    >\r\n                                        Submit\r\n                                        {isLoading && <ButtonCircularProgress />}\r\n                                    </Button>\r\n\r\n                                </Box>\r\n                                <Box\r\n                                    sx={{\r\n                                        display: \"grid\",\r\n                                        justifyContent: \"center\",\r\n                                        mt: \"13px\",\r\n                                    }}\r\n                                >\r\n                                    <Typography variant=\"body1\" color={\"rgba(60, 60, 60, 1)\"}>\r\n                                        Have an account?\r\n                                        <span\r\n                                            onClick={() => {\r\n                                                navigate(\"/login\");\r\n                                            }}\r\n                                            style={{\r\n                                                color: \"rgba(0, 186, 242, 1)\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        >\r\n                                            &nbsp;Log In\r\n                                        </span>\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormHelperTextUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormHelperText', slot);\n}\nconst formHelperTextClasses = generateUtilityClasses('MuiFormHelperText', ['root', 'error', 'disabled', 'sizeSmall', 'sizeMedium', 'contained', 'focused', 'filled', 'required']);\nexport default formHelperTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, theme.typography.caption, {\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}, ownerState.size === 'small' && {\n  marginTop: 4\n}, ownerState.contained && {\n  marginLeft: 14,\n  marginRight: 14\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n      children,\n      className,\n      component = 'p'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = _extends({}, props, {\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;"],"names":["url","loginGenerateOtp","concat","loginVerifyOtp","signupGenerateOtp","signupVerifiedEmail","signupVerifyOtp","setPin","setPinChange","resetPin","createChild","getSchool","getAllChild","switchChild","allModules","getLeason","getQuestions","attemptQuestions","styles","otpFormControl","color","width","height","marginRight","border","borderRadius","props","isLoading","setIsLoading","useState","navigate","useNavigate","location","useLocation","auth","useContext","AuthContext","_jsx","Page","title","children","_jsxs","Box","sx","display","gap","textAlign","Typography","variant","mt","Formik","onSubmit","async","_location$state","token","state","res","axios","method","ApiConfig","headers","data","new_pin","values","pin","confirm_pin","Cotp","status","toast","success","message","setEndTime","moment","add","unix","error","_error$response","_error$response$data","response","initialValues","validationSchema","yup","shape","length","required","oneOf","_ref","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","Form","Grid","margin","marginBottom","FormControl","fullWidth","Boolean","OTPInput","value","inputVariant","autoComplete","onChange","otpValue","name","id","style","justifyContent","OTPLength","otpType","FormHelperText","autoFocus","marginTop","Button","type","disabled","ButtonCircularProgress","onClick","cursor","formControlState","states","muiFormControl","reduce","acc","useFormControl","React","FormControlContext","getFormHelperTextUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","FormHelperTextRoot","styled","overridesResolver","ownerState","root","size","capitalize","contained","filled","theme","_extends","vars","palette","text","secondary","typography","caption","marginLeft","formHelperTextClasses","main","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","fcs","focused","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}