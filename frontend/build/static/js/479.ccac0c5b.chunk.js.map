{"version":3,"file":"static/js/479.ccac0c5b.chunk.js","mappings":"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","sources":["config/APICongig.js","views/auth/login/Login.js"],"sourcesContent":["\r\n//Live URL\r\n// const url = \"http://thecocoapp.com:8080/api/v1/\";\r\n\r\n//Local URL\r\nconst url = \"http://localhost:3500/api/v1/\";\r\n\r\nconst ApiConfig = {\r\n  loginGenerateOtp: `${url}auth/login/generate-otp`,\r\n  loginVerifyOtp: `${url}auth/login/verify-otp`,\r\n\r\n  signupGenerateOtp: `${url}auth/signup/generate-otp`,\r\n  signupVerifiedEmail: `${url}auth/signup-with-verfied-email`,\r\n  signupVerifyOtp: `${url}auth/signup/verify-otp`,\r\n\r\n  createChild: `${url}child/create`,\r\n  getSchool: `${url}school/get-all-schools`,\r\n\r\n  //child\r\n  getAllChild: `${url}child/get-all-childs`,\r\n  switchChild: `${url}child/switch-to-active-child`,\r\n  //modules\r\n  allModules : `${url}dashboard/get-all-modules`,\r\n  //leason\r\n  getLeason: `${url}dashboard/get-lessons`,\r\n  //questions\r\n  getQuestions: `${url}dashboard/get-questions`,\r\n  attemptQuestions: `${url}questions/attempt-questions`,\r\n  \r\n};\r\nexport default ApiConfig;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport ApiConfig from \"src/config/APICongig\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport toast from 'react-hot-toast';\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport moment from \"moment\";\r\n\r\nfunction Login(props) {\r\n  // const [isRememberMe, setIsRememberMe] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n   const auth = useContext(AuthContext);\r\n  const formInitialSchema = \r\n  // isRememberMe\r\n  //   ? \r\n    {\r\n      email: \"\",\r\n    }\r\n    // : {\r\n    //   email: window.sessionStorage.getItem(\"email\") || \"\",\r\n    // };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(ApiConfig.loginGenerateOtp, {\r\n        email: values.email,\r\n      });\r\n      if (res.status === 200) {\r\n        toast.success(res.data.message);\r\n        setIsLoading(false);\r\n        navigate(\"/verify\", {\r\n          state: {\r\n            email: values.email,\r\n            type: \"login\",\r\n          },\r\n        });\r\n       auth.setEndTime(moment().add(3, \"m\").unix());\r\n      }\r\n    } catch (error) {\r\n      toast.error(\r\n        error?.response?.data?.message ||\r\n          \"Something went wrong please try again later\"\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Login\">\r\n      <Box sx={{ display: \"grid\", gap: \"13px\", textAlign: \"center\" }}>\r\n        <Typography variant=\"h1\" color={\"rgba(67, 69, 71, 1)\"} mt={1}>\r\n          Login\r\n        </Typography>\r\n        <Typography variant=\"h4\" color={\"rgba(67, 69, 71, 1)\"}>\r\n          Welcome back! Login now to see\r\n          <br /> where you left off\r\n        </Typography>\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={formInitialSchema}\r\n          validationSchema={yup.object().shape({\r\n            email: yup.string().required(\"Please enter your email address.\"),\r\n          })}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            touched,\r\n            values,\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Grid sx={{ margin: \"13px 0\" }}>\r\n                <TextField\r\n                  placeholder=\"Email ID\"\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  inputProps={{ maxLength: 256 }}\r\n                  value={values.email}\r\n                  name=\"email\"\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  SX={{ padding: \"8px 13px\" }}\r\n                />\r\n                <FormHelperText error>\r\n                  {touched.email && errors.email}\r\n                </FormHelperText>\r\n              </Grid>\r\n\r\n              <Grid>\r\n                <Box sx={{ marginTop: \"26px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    disabled={isLoading}\r\n                    fullWidth\r\n                  >\r\n                    Login\r\n                    {isLoading && <ButtonCircularProgress />}\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"grid\",\r\n                    justifyContent: \"center\",\r\n                    mt: \"13px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color={\"rgba(60, 60, 60, 1)\"}>\r\n                    Donâ€™t have an account?\r\n                    <span\r\n                      onClick={() => {\r\n                        navigate(\"/sign-up\");\r\n                      }}\r\n                      style={{ color: \"rgba(0, 186, 242, 1)\", cursor: \"pointer\" }}\r\n                    >\r\n                      &nbsp;Sign up\r\n                    </span>\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["url","loginGenerateOtp","concat","loginVerifyOtp","signupGenerateOtp","signupVerifiedEmail","signupVerifyOtp","createChild","getSchool","getAllChild","switchChild","allModules","getLeason","getQuestions","attemptQuestions","props","isLoading","setIsLoading","useState","navigate","useNavigate","auth","useContext","AuthContext","_jsx","Page","title","children","_jsxs","Box","sx","display","gap","textAlign","Typography","variant","color","mt","Formik","onSubmit","async","res","axios","post","ApiConfig","email","values","status","toast","success","data","message","state","type","setEndTime","moment","add","unix","error","_error$response","_error$response$data","response","initialValues","validationSchema","yup","shape","required","_ref","errors","handleBlur","handleChange","handleSubmit","touched","Form","Grid","margin","TextField","placeholder","fullWidth","size","inputProps","maxLength","value","name","Boolean","onBlur","onChange","SX","padding","FormHelperText","marginTop","Button","disabled","ButtonCircularProgress","justifyContent","onClick","style","cursor"],"sourceRoot":""}